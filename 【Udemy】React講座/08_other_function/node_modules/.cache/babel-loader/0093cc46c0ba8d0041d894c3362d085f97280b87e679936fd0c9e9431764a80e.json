{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/Udemy/\\u3010Udemy\\u3011React\\u8B1B\\u5EA7\\u30FC\\u30B5\\u30F3\\u30D5\\u309A\\u30EB\\u30B3\\u30FC\\u30C8\\u3099(\\u6B63\\u89E3)/08_other_function/src/030_useRef/start/Example.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Case1 = () => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const inputRef = useRef();\n\n  // console.log(inputRef);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u30E6\\u30FC\\u30B9\\u30B1\\u30FC\\u30B91\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef,\n      value: value,\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => inputRef.current.focus(),\n      children: \"\\u30A4\\u30F3\\u30D7\\u30C3\\u30C8\\u8981\\u7D20\\u3092\\u30D5\\u30A9\\u30FC\\u30AB\\u30B9\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Case1, \"lXp8zU3IuMqLZ2UKZ+0r3IvveOM=\");\n_c = Case1;\nconst Case2 = () => {\n  _s2();\n  const [playing, setPlaying] = useState(false);\n  const videoRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      style: {\n        maxWidth: \"100%\"\n      },\n      ref: videoRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"./sample.mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (playing) {\n          videoRef.current.pause();\n        } else {\n          videoRef.current.play();\n        }\n        setPlaying(prev => !prev);\n      },\n      children: playing ? 'Stop' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s2(Case2, \"U2rrVC76nd8ytQWL4BF4tFdssl8=\");\n_c2 = Case2;\nconst createTimeStamp = () => new Date().getTime();\n\n/* POINT useRefは再レンダリングされません。\r\n書き換え可能な情報としてコンポーネントに保持させておくことができます。\r\nstate は更新されるごとに再レンダーされますが、refオブジェクトの中身が変わっても再レンダーが走ることはありません。\r\n*/\nconst Case3 = () => {\n  _s3();\n  const [timeStamp, setValue] = useState(createTimeStamp());\n  const ref = useRef(createTimeStamp());\n\n  //再レンダリングが発生する。\n  const updateState = () => {\n    setValue(createTimeStamp());\n  };\n\n  //再レンダリングが発生しない。\n  const updateRef = () => {\n    /* コンソールを見るとブラウザの表示と、ref.currentの中身が異なることを確認できます */\n    ref.current = createTimeStamp();\n    console.log(\"ref.current -> \", ref.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u30E6\\u30FC\\u30B9\\u30B1\\u30FC\\u30B93\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"state: \", timeStamp, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateState,\n        children: \"\\u66F4\\u65B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ref: \", ref.current, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateRef,\n        children: \"\\u66F4\\u65B0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s3(Case3, \"05QoAIf8fZod5WRr+igOAGdl5cY=\");\n_c3 = Case3;\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Case1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Case2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Case3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c4 = Example;\nexport default Example;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Case1\");\n$RefreshReg$(_c2, \"Case2\");\n$RefreshReg$(_c3, \"Case3\");\n$RefreshReg$(_c4, \"Example\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Case1","_s","value","setValue","inputRef","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","e","target","onClick","current","focus","_c","Case2","_s2","playing","setPlaying","videoRef","style","maxWidth","src","pause","play","prev","_c2","createTimeStamp","Date","getTime","Case3","_s3","timeStamp","updateState","updateRef","console","log","_c3","Example","_c4","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/Udemy/【Udemy】React講座ーサンプルコード(正解)/08_other_function/src/030_useRef/start/Example.js"],"sourcesContent":["import { useState, useRef } from \"react\";\r\n\r\nconst Case1 = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const inputRef = useRef();\r\n\r\n  // console.log(inputRef);\r\n\r\n  return (\r\n    <div>\r\n      <h3>ユースケース1</h3>\r\n      <input type=\"text\" ref={inputRef} value={value} onChange={(e) => setValue(e.target.value)} />\r\n      <button onClick={() => inputRef.current.focus()}>\r\n        インプット要素をフォーカスする\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Case2 = () => { \r\n  const [playing, setPlaying ] = useState(false);\r\n  const videoRef = useRef();\r\n  return (\r\n    <div>\r\n      <video style={{maxWidth:\"100%\"}} ref={videoRef}>\r\n        <source src=\"./sample.mp4\"></source>\r\n      </video>\r\n      <button onClick={() => {\r\n        if(playing){\r\n          videoRef.current.pause();\r\n        }else{\r\n          videoRef.current.play();\r\n        }\r\n        setPlaying(prev => !prev);\r\n      }}>\r\n\r\n        { playing ? 'Stop' : 'Play'} \r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst createTimeStamp = () => new Date().getTime();\r\n\r\n/* POINT useRefは再レンダリングされません。\r\n書き換え可能な情報としてコンポーネントに保持させておくことができます。\r\nstate は更新されるごとに再レンダーされますが、refオブジェクトの中身が変わっても再レンダーが走ることはありません。\r\n*/\r\nconst Case3 = () => {\r\n  const [timeStamp, setValue] = useState(createTimeStamp());\r\n  const ref = useRef(createTimeStamp());\r\n\r\n  //再レンダリングが発生する。\r\n  const updateState = () => {\r\n    setValue(createTimeStamp());\r\n  };\r\n\r\n  \r\n  //再レンダリングが発生しない。\r\n  const updateRef = () => {\r\n    /* コンソールを見るとブラウザの表示と、ref.currentの中身が異なることを確認できます */\r\n    ref.current = createTimeStamp();\r\n    console.log(\"ref.current -> \", ref.current);\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>ユースケース3</h3>\r\n      <p>\r\n        state: {timeStamp}\r\n        <button onClick={updateState}>更新</button>\r\n      </p>\r\n      <p>\r\n        ref: {ref.current}\r\n        <button onClick={updateRef}>更新</button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Example = () => {\r\n  return (\r\n    <>\r\n      <Case1 />\r\n      <Case2 />\r\n      <Case3 />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}